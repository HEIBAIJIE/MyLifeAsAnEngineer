/* 黑客风像素艺术游戏UI样式 - 矩阵终端风格 */

/* 本地字体定义 */
@font-face {
    font-family: 'CustomFont';
    src: url('../../static/font.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
}

/* 动态字体大小系统 - 基于视口宽度 */
:root {
  /* 基础字体大小计算 */
  --base-font-size: clamp(16px, 2vw, 32px);
  --small-font-size: clamp(12px, 1.5vw, 24px);
  --large-font-size: clamp(20px, 2.5vw, 40px);
  --title-font-size: clamp(24px, 3vw, 48px);
  --subtitle-font-size: clamp(14px, 1.8vw, 28px);
  
  /* 按钮字体大小 */
  --button-font-size: clamp(14px, 1.6vw, 28px);
  --button-small-font-size: clamp(12px, 1.2vw, 20px);
  --button-large-font-size: clamp(18px, 2.2vw, 36px);
  
  /* 界面元素字体大小 */
  --ui-font-size: clamp(12px, 1.4vw, 24px);
  --tiny-font-size: clamp(10px, 1vw, 18px);
  
  /* 黑客风格颜色调色板 */
  --matrix-green: #00ff00;
  --matrix-dark-green: #008800;
  --matrix-light-green: #44ff44;
  --terminal-green: #00ff41;
  --neon-cyan: #00ffff;
  --neon-yellow: #ffff00;
  --error-red: #ff0040;
  --warning-orange: #ff8800;
  --background-black: #000000;
  --panel-black: #0a0a0a;
  --border-green: #004400;
  --shadow-green: #002200;
  
  /* 像素化效果参数 */
  --pixel-size: clamp(2px, 0.3vw, 4px);
  --scan-line-height: clamp(1px, 0.1vw, 2px);
  --glow-size: clamp(5px, 0.8vw, 10px);
}

/* 全局重置和基础样式 */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html, body {
  /* 中英文混合字体栈 - 针对中文像素化优化 */
  font-family: 
    'CustomFont',
    'Microsoft YaHei UI',
    'PingFang SC',
    '微软雅黑',
    monospace;
  font-size: var(--base-font-size);
  background: var(--background-black);
  color: var(--matrix-green);
  overflow: hidden;
  height: 100%;
  /* 像素化渲染 */
  image-rendering: pixelated;
  image-rendering: -moz-crisp-edges;
  image-rendering: crisp-edges;
  /* 全局扫描线效果 */
  position: relative;
}

/* 全局矩阵扫描线背景 */
html::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    repeating-linear-gradient(
      0deg,
      transparent,
      transparent calc(var(--scan-line-height) * 2),
      rgba(0, 255, 0, 0.03) calc(var(--scan-line-height) * 2),
      rgba(0, 255, 0, 0.03) calc(var(--scan-line-height) * 3)
    );
  pointer-events: none;
  z-index: 10000;
  animation: matrix-scan 0.1s linear infinite;
}

@keyframes matrix-scan {
  0% { transform: translateY(0px); }
  100% { transform: translateY(calc(var(--scan-line-height) * 3)); }
}

/* 中文字体像素化处理 */
.chinese-pixel {
  font-family: 
    'CustomFont',
    'Microsoft YaHei UI',
    '微软雅黑',
    'Heiti SC',
    'WenQuanYi Micro Hei',
    monospace;
  font-weight: 900;
  letter-spacing: 0.15em;
  font-size: 1em;
  /* 像素化文字效果 */
  text-shadow: 
    1px 0 0 currentColor,
    0 1px 0 currentColor,
    1px 1px 0 currentColor,
    2px 2px 0 var(--background-black),
    0 0 calc(var(--glow-size) / 4) currentColor;
  /* 增强边缘清晰度 */
  -webkit-font-smoothing: none;
  -moz-osx-font-smoothing: unset;
  font-smooth: never;
  /* 增加文字轮廓 */
  -webkit-text-stroke: 0.5px currentColor;
}

/* 英文字体像素化处理 */
.english-pixel {
  font-family: 'CustomFont', monospace;
  letter-spacing: 0.05em;
}

/* 混合文本自动处理 */
.pixel-text {
  font-size: var(--base-font-size);
  color: var(--matrix-green);
  text-shadow: 
    1px 1px 0px var(--background-black),
    0 0 var(--glow-size) currentColor;
  line-height: 1.6;
  /* 为中文字符添加特殊处理 */
  font-feature-settings: "liga" 0;
}

/* 像素边框样式 - 矩阵终端风格 */
.pixel-border {
  border: var(--pixel-size) solid var(--border-green);
  position: relative;
  background: var(--panel-black);
  box-shadow: 
    inset 0 0 0 1px var(--shadow-green),
    0 0 0 1px var(--shadow-green),
    0 var(--pixel-size) 0 var(--shadow-green),
    0 0 var(--glow-size) var(--matrix-dark-green);
}

.pixel-border::before {
  content: '';
  position: absolute;
  top: calc(-1 * var(--pixel-size));
  left: calc(-1 * var(--pixel-size));
  right: calc(-1 * var(--pixel-size));
  bottom: calc(-1 * var(--pixel-size));
  background: 
    repeating-linear-gradient(
      45deg,
      transparent 0px,
      transparent calc(var(--pixel-size) * 2),
      var(--border-green) calc(var(--pixel-size) * 2),
      var(--border-green) calc(var(--pixel-size) * 4)
    );
  z-index: -1;
  opacity: 0.3;
}

.pixel-border:hover {
  border-color: var(--matrix-green);
  box-shadow: 
    inset 0 0 0 1px var(--border-green),
    0 0 0 1px var(--border-green),
    0 var(--pixel-size) 0 var(--border-green),
    0 0 calc(var(--glow-size) * 2) var(--matrix-green);
  animation: terminal-flicker 0.1s infinite;
}

/* 终端闪烁效果 */
@keyframes terminal-flicker {
  0%, 96%, 100% { opacity: 1; }
  97%, 99% { opacity: 0.9; }
  98% { opacity: 0.95; }
}

/* 像素按钮样式 - 黑客终端风格 */
.pixel-button {
  font-family: inherit;
  background: var(--panel-black);
  border: var(--pixel-size) solid var(--border-green);
  color: var(--matrix-green);
  padding: clamp(8px, 1vw, 16px) clamp(16px, 2vw, 32px);
  font-size: var(--button-font-size);
  cursor: pointer;
  position: relative;
  text-decoration: none;
  display: inline-block;
  text-align: center;
  min-width: clamp(120px, 15vw, 240px);
  transition: all 0.1s ease;
  overflow: hidden;
  
  /* 像素化文字效果 */
  text-shadow: 
    1px 1px 0px var(--background-black),
    0 0 calc(var(--glow-size) / 2) currentColor;
  
  /* 3D立体效果 */
  box-shadow: 
    0 var(--pixel-size) 0 var(--shadow-green),
    inset 0 1px 0 var(--matrix-dark-green),
    0 0 calc(var(--glow-size) / 2) var(--border-green);
}

/* 按钮内部扫描线效果 */
.pixel-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(0, 255, 0, 0.2),
    transparent
  );
  transition: left 0.5s ease;
}

.pixel-button:hover {
  background: var(--shadow-green);
  border-color: var(--matrix-green);
  color: var(--terminal-green);
  transform: translateY(calc(-1 * var(--pixel-size)));
  
  box-shadow: 
    0 calc(var(--pixel-size) * 2) 0 var(--shadow-green),
    inset 0 1px 0 var(--matrix-light-green),
    0 0 var(--glow-size) var(--matrix-green),
    0 0 calc(var(--glow-size) * 2) var(--terminal-green);
    
  animation: button-glow 0.3s ease infinite alternate;
}

/* 按钮悬停时的扫描效果 */
.pixel-button:hover::before {
  left: 100%;
}

@keyframes button-glow {
  0% { box-shadow: 
    0 calc(var(--pixel-size) * 2) 0 var(--shadow-green),
    inset 0 1px 0 var(--matrix-light-green),
    0 0 var(--glow-size) var(--matrix-green),
    0 0 calc(var(--glow-size) * 2) var(--terminal-green); }
  100% { box-shadow: 
    0 calc(var(--pixel-size) * 2) 0 var(--shadow-green),
    inset 0 1px 0 var(--matrix-light-green),
    0 0 calc(var(--glow-size) * 1.5) var(--matrix-green),
    0 0 calc(var(--glow-size) * 3) var(--terminal-green); }
}

.pixel-button:active {
  transform: translateY(var(--pixel-size));
  box-shadow: 
    0 0 0 var(--shadow-green),
    inset 0 1px 0 var(--border-green),
    0 0 calc(var(--glow-size) / 2) var(--matrix-green);
}

/* 按钮尺寸变体 */
.pixel-button.large {
  padding: clamp(12px, 1.5vw, 24px) clamp(24px, 3vw, 48px);
  font-size: var(--button-large-font-size);
  min-width: clamp(200px, 25vw, 400px);
}

.pixel-button.small {
  padding: clamp(6px, 0.8vw, 12px) clamp(12px, 1.5vw, 24px);
  font-size: var(--button-small-font-size);
  min-width: clamp(80px, 10vw, 160px);
}

.pixel-button:disabled {
  opacity: 0.3;
  cursor: not-allowed;
  transform: none;
  animation: none;
}

.pixel-button:disabled:hover {
  transform: none;
  animation: none;
  box-shadow: 
    0 var(--pixel-size) 0 var(--shadow-green),
    inset 0 1px 0 var(--matrix-dark-green);
}

/* 矩阵风格发光文字 */
.pixel-glow {
  animation: matrix-glow 2s ease-in-out infinite alternate;
}

@keyframes matrix-glow {
  from {
    text-shadow: 
      0 0 calc(var(--glow-size) / 2) currentColor,
      0 0 var(--glow-size) currentColor,
      0 0 calc(var(--glow-size) * 1.5) currentColor,
      2px 2px 0px var(--background-black);
  }
  to {
    text-shadow: 
      0 0 var(--glow-size) currentColor,
      0 0 calc(var(--glow-size) * 2) currentColor,
      0 0 calc(var(--glow-size) * 3) currentColor,
      2px 2px 0px var(--background-black);
  }
}

/* 数据流动画 */
.data-stream {
  animation: data-flow 3s linear infinite;
}

@keyframes data-flow {
  0% { transform: translateX(-100%); opacity: 0; }
  10% { opacity: 1; }
  90% { opacity: 1; }
  100% { transform: translateX(100%); opacity: 0; }
}

/* 文本样式系统 */
.pixel-text-large {
  font-size: var(--large-font-size);
  color: var(--neon-cyan);
  text-shadow: 
    2px 2px 0px var(--background-black),
    0 0 var(--glow-size) currentColor;
}

.pixel-text-small {
  font-size: var(--small-font-size);
  color: var(--matrix-dark-green);
  text-shadow: 
    1px 1px 0px var(--background-black),
    0 0 calc(var(--glow-size) / 2) currentColor;
}

.pixel-text-subtitle {
  font-size: var(--subtitle-font-size);
  color: var(--terminal-green);
  text-shadow: 
    1px 1px 0px var(--background-black),
    0 0 calc(var(--glow-size) / 2) currentColor;
  line-height: 1.8;
  opacity: 0.9;
}

.pixel-text-error {
  color: var(--error-red);
  animation: error-pulse 1s ease-in-out infinite;
}

@keyframes error-pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; }
}

.pixel-text-warning {
  color: var(--warning-orange);
  animation: warning-blink 2s ease-in-out infinite;
}

@keyframes warning-blink {
  0%, 90% { opacity: 1; }
  95% { opacity: 0.5; }
}

/* 终端风格滚动条 */
::-webkit-scrollbar {
  width: calc(var(--pixel-size) * 3);
}

::-webkit-scrollbar-track {
  background: var(--panel-black);
  border: 1px solid var(--border-green);
}

::-webkit-scrollbar-thumb {
  background: var(--matrix-green);
  border: 1px solid var(--border-green);
  box-shadow: 0 0 calc(var(--glow-size) / 2) var(--matrix-green);
}

::-webkit-scrollbar-thumb:hover {
  background: var(--terminal-green);
  box-shadow: 0 0 var(--glow-size) var(--terminal-green);
}

/* 输入框样式 - 终端风格 */
.pixel-input {
  font-family: inherit;
  font-size: var(--ui-font-size);
  padding: clamp(8px, 1vw, 16px);
  background: var(--panel-black);
  color: var(--matrix-green);
  border: var(--pixel-size) solid var(--border-green);
  outline: none;
  resize: none;
  
  text-shadow: 
    1px 1px 0px var(--background-black),
    0 0 calc(var(--glow-size) / 2) currentColor;
    
  box-shadow: 
    inset 0 0 calc(var(--glow-size) / 2) var(--shadow-green),
    0 0 calc(var(--glow-size) / 2) var(--border-green);
}

.pixel-input:focus {
  border-color: var(--matrix-green);
  box-shadow: 
    inset 0 0 calc(var(--glow-size) / 2) var(--shadow-green),
    0 0 var(--glow-size) var(--matrix-green);
  animation: input-pulse 1s ease-in-out infinite;
}

@keyframes input-pulse {
  0%, 100% { box-shadow: 
    inset 0 0 calc(var(--glow-size) / 2) var(--shadow-green),
    0 0 var(--glow-size) var(--matrix-green); }
  50% { box-shadow: 
    inset 0 0 calc(var(--glow-size) / 2) var(--shadow-green),
    0 0 calc(var(--glow-size) * 1.5) var(--matrix-green); }
}

.pixel-input::placeholder {
  color: var(--border-green);
  opacity: 0.7;
}

/* 资源显示样式 */
.resource-display {
  background: var(--panel-black);
  border: 1px solid var(--border-green);
  padding: clamp(6px, 1vw, 12px);
  margin: clamp(2px, 0.4vw, 6px);
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
  overflow: hidden;
}

.resource-display::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 1px;
  background: var(--matrix-green);
  opacity: 0.3;
  animation: resource-scan 2s linear infinite;
}

@keyframes resource-scan {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

.resource-icon {
  font-size: var(--ui-font-size);
  margin-right: clamp(4px, 0.8vw, 8px);
}

.resource-value {
  font-size: var(--ui-font-size);
  color: var(--matrix-green);
  font-weight: bold;
  text-shadow: 0 0 calc(var(--glow-size) / 2) currentColor;
}

.resource-value.low {
  color: var(--error-red);
  animation: critical-pulse 1s ease-in-out infinite;
}

@keyframes critical-pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.6; }
}

.resource-value.high {
  color: var(--terminal-green);
  animation: optimal-glow 2s ease-in-out infinite alternate;
}

@keyframes optimal-glow {
  from { text-shadow: 0 0 calc(var(--glow-size) / 2) currentColor; }
  to { text-shadow: 0 0 var(--glow-size) currentColor; }
}

/* 实体卡片样式 */
.entity-card {
  background: var(--panel-black);
  border: var(--pixel-size) solid var(--border-green);
  padding: clamp(12px, 1.8vw, 20px);
  margin: clamp(4px, 0.8vw, 8px);
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
  overflow: hidden;
}

.entity-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(0, 255, 0, 0.1),
    transparent
  );
  transition: left 0.3s ease;
}

.entity-card:hover {
  border-color: var(--matrix-green);
  box-shadow: 
    0 0 var(--glow-size) var(--matrix-green),
    inset 0 0 calc(var(--glow-size) / 2) var(--shadow-green);
  background: var(--shadow-green);
}

.entity-card:hover::before {
  left: 100%;
}

.entity-card.selected {
  background: var(--shadow-green);
  border-color: var(--terminal-green);
  box-shadow: 
    0 0 calc(var(--glow-size) * 1.5) var(--terminal-green),
    inset 0 0 var(--glow-size) var(--shadow-green);
}

.entity-icon {
  font-size: clamp(20px, 3vw, 40px);
  text-align: center;
  margin-bottom: clamp(6px, 1vw, 12px);
  filter: 
    drop-shadow(2px 2px 0px var(--background-black))
    drop-shadow(0 0 calc(var(--glow-size) / 2) currentColor);
}

.entity-name {
  font-size: var(--ui-font-size);
  color: var(--neon-cyan);
  text-align: center;
  margin-bottom: clamp(4px, 0.8vw, 8px);
  text-shadow: 
    1px 1px 0px var(--background-black),
    0 0 calc(var(--glow-size) / 2) currentColor;
}

/* 事件项目样式 */
.event-item {
  background: var(--panel-black);
  border: 1px solid var(--border-green);
  padding: clamp(8px, 1.2vw, 16px);
  margin: clamp(4px, 0.6vw, 8px);
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
}

.event-item:hover {
  border-color: var(--matrix-green);
  background: var(--shadow-green);
  box-shadow: 0 0 calc(var(--glow-size) / 2) var(--matrix-green);
}

.event-item.disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.event-name {
  font-size: var(--ui-font-size);
  color: var(--terminal-green);
  margin-bottom: clamp(2px, 0.4vw, 4px);
  text-shadow: 0 0 calc(var(--glow-size) / 2) currentColor;
}

.event-cost {
  font-size: var(--small-font-size);
  color: var(--warning-orange);
  text-shadow: 0 0 calc(var(--glow-size) / 2) currentColor;
}

/* 加载动画 */
.pixel-loading {
  display: inline-block;
  width: clamp(16px, 2vw, 32px);
  height: clamp(16px, 2vw, 32px);
  border: var(--pixel-size) solid var(--border-green);
  border-top: var(--pixel-size) solid var(--matrix-green);
  border-radius: 0;
  animation: pixel-spin 1s linear infinite;
}

@keyframes pixel-spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* 通知样式 */
.pixel-notification {
  position: fixed;
  top: 20px;
  right: 20px;
  background: var(--panel-black);
  border: var(--pixel-size) solid var(--matrix-green);
  padding: clamp(12px, 1.5vw, 20px);
  color: var(--terminal-green);
  z-index: 1000;
  animation: pixel-slide-in 0.3s ease;
  box-shadow: 
    0 0 var(--glow-size) var(--matrix-green),
    inset 0 0 calc(var(--glow-size) / 2) var(--shadow-green);
}

@keyframes pixel-slide-in {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

.notification-text {
  font-size: var(--ui-font-size);
  text-shadow: 
    1px 1px 0px var(--background-black),
    0 0 calc(var(--glow-size) / 2) currentColor;
}

/* 响应式设计 */
@media (max-width: 768px) {
  :root {
    --base-font-size: clamp(14px, 2.2vw, 24px);
    --button-font-size: clamp(12px, 1.8vw, 20px);
    --title-font-size: clamp(20px, 3.5vw, 32px);
    --glow-size: clamp(3px, 0.6vw, 6px);
  }
  
  .entity-icon {
    font-size: clamp(16px, 2.5vw, 32px);
  }
}

@media (max-width: 480px) {
  :root {
    --base-font-size: clamp(12px, 2.5vw, 20px);
    --button-font-size: clamp(10px, 2vw, 16px);
    --title-font-size: clamp(16px, 4vw, 24px);
    --pixel-size: clamp(1px, 0.2vw, 3px);
    --glow-size: clamp(2px, 0.4vw, 4px);
  }
}

/* 大屏幕优化 */
@media (min-width: 1920px) {
  :root {
    --base-font-size: clamp(24px, 1.5vw, 40px);
    --button-font-size: clamp(20px, 1.2vw, 32px);
    --title-font-size: clamp(32px, 2vw, 56px);
    --subtitle-font-size: clamp(18px, 1.3vw, 32px);
    --glow-size: clamp(8px, 1vw, 15px);
  }
}

@media (min-width: 2560px) {
  :root {
    --base-font-size: clamp(28px, 1.2vw, 48px);
    --button-font-size: clamp(24px, 1vw, 40px);
    --title-font-size: clamp(40px, 1.8vw, 64px);
    --glow-size: clamp(10px, 1.2vw, 20px);
  }
} 